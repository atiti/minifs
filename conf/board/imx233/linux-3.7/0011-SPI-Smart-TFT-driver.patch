From 7f3fa7967ceefc70cec87b67d0b6f18a0b7a71f6 Mon Sep 17 00:00:00 2001
From: Michel Pollet <buserror@gmail.com>
Date: Mon, 3 Dec 2012 15:39:24 +0000
Subject: [PATCH 11/11] SPI Smart TFT driver

Not working yet. Work in progress

Signed-off-by: Michel Pollet <buserror@gmail.com>
---
 arch/arm/boot/dts/imx23-olinuxino.dts |   31 +++++++--
 arch/arm/boot/dts/imx23.dtsi          |  112 ++++++++++++++++-----------------
 drivers/video/st7735fb.c              |  109 +++++++++++++++++---------------
 include/video/st7735fb.h              |    1 -
 4 files changed, 139 insertions(+), 114 deletions(-)

diff --git a/arch/arm/boot/dts/imx23-olinuxino.dts b/arch/arm/boot/dts/imx23-olinuxino.dts
index 35fc9a5..76ab105 100644
--- a/arch/arm/boot/dts/imx23-olinuxino.dts
+++ b/arch/arm/boot/dts/imx23-olinuxino.dts
@@ -26,11 +26,11 @@
 		apbh@80000000 {
 			ssp1: ssp@80034000 {
 				compatible = "fsl,imx23-spi";
-				clock-frequency = <160000000>;
-				bus-num = <0>;
+			//	clock-frequency = <160000000>;
+				bus-num = <1>;
 				pinctrl-names = "default";
-				pinctrl-0 = <&spi1_control_pins &spi1_cs_pins>;
-				status = "disabled";
+				pinctrl-0 = <&spi1_control_pins &spi1_cs_pins &tft_pins>;
+				status = "okay";
 
 				#address-cells = <1>;
 				#size-cells = <0>;
@@ -42,6 +42,15 @@
 					interrupts = <&gpio2 28>;
 					interrupt-names = "spidev-trigger";
 				};
+
+				device@1 {
+					compatible = "st7735fb";
+					reg = <1>;
+					spi-max-frequency = <8000000>;
+					st7735fb,dc-gpio = <&gpio1 1 0>;
+					st7735fb,rst-gpio = <&gpio1 0 0>;
+					big-endian = <1>;
+				};
 			};
 			pinctrl@80018000 {
 				spi1_control_pins: spi1_control_pins {
@@ -55,15 +64,25 @@
 				spi1_cs_pins: spi1_cs_pins {
 					reg = <0>;
 					fsl,pinmux-ids = <
-						0x1033  // MX23_PAD_LCD_D03__GPIO_1_3 
+						0x0032  // MX23_PAD_GPMI_D03__SSP2_DATA3 aka Scn0
+						0x0042	// MX23_PAD_GPMI_D04__SSP2_DATA4 aka Scn1
+					//	0x0052	// MX23_PAD_GPMI_D05__SSP2_DATA5 aka Scn2
+
 						// This is optional, this allows the spidev
 						// driver to have an interrupt pin, this is
 						// "Bank 2 pin 28" and it needs a pullup
-						//
 						0x21c3 // MX23_PAD_GPMI_CE0N__GPIO_2_28
 					>;
 					fsl,pull-up = <1>;
 				};
+				tft_pins: tft_pins {
+					reg = <0>;
+					fsl,pinmux-ids = <
+						0x1013  // MX23_PAD_LCD_D01__GPIO_1_1 aka D/C
+						0x1003	// MX23_PAD_LCD_D00__GPIO_1_0 aka RST
+					>;
+					fsl,pull-up = <1>;
+				};
 			};
 			lcdif@80030000 {
 				pinctrl-names = "default";
diff --git a/arch/arm/boot/dts/imx23.dtsi b/arch/arm/boot/dts/imx23.dtsi
index 67e2574..4be73a1 100644
--- a/arch/arm/boot/dts/imx23.dtsi
+++ b/arch/arm/boot/dts/imx23.dtsi
@@ -281,64 +281,64 @@
 				};
 				
 				lcdif_16bit_pins_a: lcdif-16bit@0 {
-                                        reg = <0>;
-                                        fsl,pinmux-ids = <
-                                                0x1000 /* MX23_PAD_LCD_D00__LCD_D0 */
-                                                0x1010 /* MX23_PAD_LCD_D01__LCD_D1 */
-                                                0x1020 /* MX23_PAD_LCD_D02__LCD_D2 */
-                                                0x1030 /* MX23_PAD_LCD_D03__LCD_D3 */
-                                                0x1040 /* MX23_PAD_LCD_D04__LCD_D4 */
-                                                0x1050 /* MX23_PAD_LCD_D05__LCD_D5 */
-                                                0x1060 /* MX23_PAD_LCD_D06__LCD_D6 */
-                                                0x1070 /* MX23_PAD_LCD_D07__LCD_D7 */
-                                                0x0001 /* MX23_PAD_LCD_D08__LCD_D8 */
-                                                0x0011 /* MX23_PAD_LCD_D09__LCD_D9 */
-                                                0x0021 /* MX23_PAD_LCD_D10__LCD_D10 */
-                                                0x0031 /* MX23_PAD_LCD_D11__LCD_D11 */
-                                                0x0041 /* MX23_PAD_LCD_D12__LCD_D12 */
-                                                0x0051 /* MX23_PAD_LCD_D13__LCD_D13 */
-                                                0x0061 /* MX23_PAD_LCD_D14__LCD_D14 */
-                                                0x0071 /* MX23_PAD_LCD_D15__LCD_D15 */
-                                                0x1160 /* MX23_PAD_LCD_DOTCK__LCD_DOTCK */
-                                                0x1170 /* MX23_PAD_LCD_ENABLE__LCD_ENABLE */
-                                                0x1180 /* MX23_PAD_LCD_HSYNC__LCD_HSYNC */
-                                                0x1190 /* MX23_PAD_LCD_VSYNC__LCD_VSYNC */
-                                        >;
-                                        fsl,drive-strength = <0>;
-                                        fsl,voltage = <1>;
-                                        fsl,pull-up = <0>;
-                                };
+					reg = <0>;
+					fsl,pinmux-ids = <
+							0x1000 /* MX23_PAD_LCD_D00__LCD_D0 */
+							0x1010 /* MX23_PAD_LCD_D01__LCD_D1 */
+							0x1020 /* MX23_PAD_LCD_D02__LCD_D2 */
+							0x1030 /* MX23_PAD_LCD_D03__LCD_D3 */
+							0x1040 /* MX23_PAD_LCD_D04__LCD_D4 */
+							0x1050 /* MX23_PAD_LCD_D05__LCD_D5 */
+							0x1060 /* MX23_PAD_LCD_D06__LCD_D6 */
+							0x1070 /* MX23_PAD_LCD_D07__LCD_D7 */
+							0x0001 /* MX23_PAD_LCD_D08__LCD_D8 */
+							0x0011 /* MX23_PAD_LCD_D09__LCD_D9 */
+							0x0021 /* MX23_PAD_LCD_D10__LCD_D10 */
+							0x0031 /* MX23_PAD_LCD_D11__LCD_D11 */
+							0x0041 /* MX23_PAD_LCD_D12__LCD_D12 */
+							0x0051 /* MX23_PAD_LCD_D13__LCD_D13 */
+							0x0061 /* MX23_PAD_LCD_D14__LCD_D14 */
+							0x0071 /* MX23_PAD_LCD_D15__LCD_D15 */
+							0x1160 /* MX23_PAD_LCD_DOTCK__LCD_DOTCK */
+							0x1170 /* MX23_PAD_LCD_ENABLE__LCD_ENABLE */
+							0x1180 /* MX23_PAD_LCD_HSYNC__LCD_HSYNC */
+							0x1190 /* MX23_PAD_LCD_VSYNC__LCD_VSYNC */
+					>;
+					fsl,drive-strength = <0>;
+					fsl,voltage = <1>;
+					fsl,pull-up = <0>;
+				};
 
 				lcdif_18bit_pins_a: lcdif-18bit@0 {
-                                        reg = <0>;
-                                        fsl,pinmux-ids = <
-                                                0x1000 /* MX23_PAD_LCD_D00__LCD_D0 */
-                                                0x1010 /* MX23_PAD_LCD_D01__LCD_D1 */
-                                                0x1020 /* MX23_PAD_LCD_D02__LCD_D2 */
-                                                0x1030 /* MX23_PAD_LCD_D03__LCD_D3 */
-                                                0x1040 /* MX23_PAD_LCD_D04__LCD_D4 */
-                                                0x1050 /* MX23_PAD_LCD_D05__LCD_D5 */
-                                                0x1060 /* MX23_PAD_LCD_D06__LCD_D6 */
-                                                0x1070 /* MX23_PAD_LCD_D07__LCD_D7 */
-                                                0x0001 /* MX23_PAD_LCD_D08__LCD_D8 */
-                                                0x0011 /* MX23_PAD_LCD_D09__LCD_D9 */
-                                                0x0021 /* MX23_PAD_LCD_D10__LCD_D10 */
-                                                0x0031 /* MX23_PAD_LCD_D11__LCD_D11 */
-                                                0x0041 /* MX23_PAD_LCD_D12__LCD_D12 */
-                                                0x0051 /* MX23_PAD_LCD_D13__LCD_D13 */
-                                                0x0061 /* MX23_PAD_LCD_D14__LCD_D14 */
-                                                0x0071 /* MX23_PAD_LCD_D15__LCD_D15 */
-                                                0x0101 /* MX23_PAD_LCD_D16__LCD_D16 */
-                                                0x0111 /* MX23_PAD_LCD_D17__LCD_D17 */
-                                                0x1160 /* MX23_PAD_LCD_DOTCK__LCD_DOTCK */
-                                                0x1170 /* MX23_PAD_LCD_ENABLE__LCD_ENABLE */
-                                                0x1180 /* MX23_PAD_LCD_HSYNC__LCD_HSYNC */
-                                                0x1190 /* MX23_PAD_LCD_VSYNC__LCD_VSYNC */
-                                        >;
-                                        fsl,drive-strength = <0>;
-                                        fsl,voltage = <1>;
-                                        fsl,pull-up = <0>;
-                                };
+					reg = <0>;
+					fsl,pinmux-ids = <
+							0x1000 /* MX23_PAD_LCD_D00__LCD_D0 */
+							0x1010 /* MX23_PAD_LCD_D01__LCD_D1 */
+							0x1020 /* MX23_PAD_LCD_D02__LCD_D2 */
+							0x1030 /* MX23_PAD_LCD_D03__LCD_D3 */
+							0x1040 /* MX23_PAD_LCD_D04__LCD_D4 */
+							0x1050 /* MX23_PAD_LCD_D05__LCD_D5 */
+							0x1060 /* MX23_PAD_LCD_D06__LCD_D6 */
+							0x1070 /* MX23_PAD_LCD_D07__LCD_D7 */
+							0x0001 /* MX23_PAD_LCD_D08__LCD_D8 */
+							0x0011 /* MX23_PAD_LCD_D09__LCD_D9 */
+							0x0021 /* MX23_PAD_LCD_D10__LCD_D10 */
+							0x0031 /* MX23_PAD_LCD_D11__LCD_D11 */
+							0x0041 /* MX23_PAD_LCD_D12__LCD_D12 */
+							0x0051 /* MX23_PAD_LCD_D13__LCD_D13 */
+							0x0061 /* MX23_PAD_LCD_D14__LCD_D14 */
+							0x0071 /* MX23_PAD_LCD_D15__LCD_D15 */
+							0x0101 /* MX23_PAD_LCD_D16__LCD_D16 */
+							0x0111 /* MX23_PAD_LCD_D17__LCD_D17 */
+							0x1160 /* MX23_PAD_LCD_DOTCK__LCD_DOTCK */
+							0x1170 /* MX23_PAD_LCD_ENABLE__LCD_ENABLE */
+							0x1180 /* MX23_PAD_LCD_HSYNC__LCD_HSYNC */
+							0x1190 /* MX23_PAD_LCD_VSYNC__LCD_VSYNC */
+					>;
+					fsl,drive-strength = <0>;
+					fsl,voltage = <1>;
+					fsl,pull-up = <0>;
+				};
 			};
 
 			digctl@8001c000 {
diff --git a/drivers/video/st7735fb.c b/drivers/video/st7735fb.c
index 69ad3d0..210ae1d 100644
--- a/drivers/video/st7735fb.c
+++ b/drivers/video/st7735fb.c
@@ -22,10 +22,15 @@
 #include <linux/spi/spi.h>
 #include <linux/delay.h>
 #include <linux/uaccess.h>
+#if defined(CONFIG_OF)
+#include <linux/of_platform.h>
+#include <linux/of_device.h>
+#include <linux/of_gpio.h>
+#endif
 
 #include <video/st7735fb.h>
 
-static struct st7735_function st7735_cfg_script[] = {
+static const struct st7735_function st7735_cfg_script[] = {
 	{ ST7735_START, ST7735_START},
 	{ ST7735_CMD, ST7735_SWRESET},
 	{ ST7735_DELAY, 150},
@@ -152,7 +157,7 @@ static int st7735_write(struct st7735fb_par *par, u8 data)
 	return spi_write(par->spi, &txbuf[0], 1);
 }
 
-static void st7735_write_data(struct st7735fb_par *par, u8 data)
+static int st7735_write_data(struct st7735fb_par *par, u8 data)
 {
 	int ret = 0;
 
@@ -163,6 +168,7 @@ static void st7735_write_data(struct st7735fb_par *par, u8 data)
 	if (ret < 0)
 		pr_err("%s: write data %02x failed with status %d\n",
 			par->info->fix.id, data, ret);
+	return ret;
 }
 
 static int st7735_write_data_buf(struct st7735fb_par *par,
@@ -175,7 +181,7 @@ static int st7735_write_data_buf(struct st7735fb_par *par,
 	return spi_write(par->spi, txbuf, size);
 }
 
-static void st7735_write_cmd(struct st7735fb_par *par, u8 data)
+static int st7735_write_cmd(struct st7735fb_par *par, u8 data)
 {
 	int ret = 0;
 
@@ -186,24 +192,25 @@ static void st7735_write_cmd(struct st7735fb_par *par, u8 data)
 	if (ret < 0)
 		pr_err("%s: write command %02x failed with status %d\n",
 			par->info->fix.id, data, ret);
+	return ret;
 }
 
-static void st7735_run_cfg_script(struct st7735fb_par *par)
+static int st7735_run_cfg_script(struct st7735fb_par *par)
 {
 	int i = 0;
 	int end_script = 0;
+	int ret = 0;
 
 	do {
-		switch (st7735_cfg_script[i].cmd)
-		{
+		switch (st7735_cfg_script[i].cmd) {
 		case ST7735_START:
 			break;
 		case ST7735_CMD:
-			st7735_write_cmd(par,
+			ret = st7735_write_cmd(par,
 				st7735_cfg_script[i].data & 0xff);
 			break;
 		case ST7735_DATA:
-			st7735_write_data(par,
+			ret = st7735_write_data(par,
 				st7735_cfg_script[i].data & 0xff);
 			break;
 		case ST7735_DELAY:
@@ -213,22 +220,20 @@ static void st7735_run_cfg_script(struct st7735fb_par *par)
 			end_script = 1;
 		}
 		i++;
-	} while (!end_script);
+	} while (!end_script && ret >= 0);
+	return ret;
 }
 
 static void st7735_set_addr_win(struct st7735fb_par *par,
 				int xs, int ys, int xe, int ye)
 {
+	uint8_t xsv[4] = {0, xs+2, 0, xe+2};
+	uint8_t ysv[4] = {0, ys+1, 0, ye+1};
+
 	st7735_write_cmd(par, ST7735_CASET);
-	st7735_write_data(par, 0x00);
-	st7735_write_data(par, xs+2);
-	st7735_write_data(par, 0x00);
-	st7735_write_data(par, xe+2);
+	st7735_write_data_buf(par, xsv, 4);
 	st7735_write_cmd(par, ST7735_RASET);
-	st7735_write_data(par, 0x00);
-	st7735_write_data(par, ys+1);
-	st7735_write_data(par, 0x00);
-	st7735_write_data(par, ye+1);
+	st7735_write_data_buf(par, ysv, 4);
 }
 
 static void st7735_reset(struct st7735fb_par *par)
@@ -244,14 +249,6 @@ static void st7735fb_update_display(struct st7735fb_par *par)
 {
 	int ret = 0;
 	u8 *vmem = par->info->screen_base;
-#ifdef __LITTLE_ENDIAN
-	int i;
-	u16 *vmem16 = (u16 *)vmem;
-	u16 *ssbuf = par->ssbuf;
-
-	for (i=0; i<WIDTH*HEIGHT*BPP/8/2; i++)
-		ssbuf[i] = swab16(vmem16[i]);
-#endif
 	/*
 		TODO:
 		Allow a subset of pages to be passed in
@@ -268,11 +265,7 @@ static void st7735fb_update_display(struct st7735fb_par *par)
 	st7735_write_cmd(par, ST7735_RAMWR);
 
 	/* Blast framebuffer to ST7735 internal display RAM */
-#ifdef __LITTLE_ENDIAN
-	ret = st7735_write_data_buf(par, (u8 *)ssbuf, WIDTH*HEIGHT*BPP/8);
-#else
 	ret = st7735_write_data_buf(par, vmem, WIDTH*HEIGHT*BPP/8);
-#endif
 	if (ret < 0)
 		pr_err("%s: spi_write failed to update display buffer\n",
 			par->info->fix.id);
@@ -288,17 +281,15 @@ static int st7735fb_init_display(struct st7735fb_par *par)
 {
 	/* TODO: Need some error checking on gpios */
 
-        /* Request GPIOs and initialize to default values */
-        gpio_request_one(par->rst, GPIOF_OUT_INIT_HIGH,
-			"ST7735 Reset Pin");
-        gpio_request_one(par->dc, GPIOF_OUT_INIT_LOW,
-			"ST7735 Data/Command Pin");
+	/* Request GPIOs and initialize to default values */
+	gpio_request_one(par->rst, GPIOF_OUT_INIT_HIGH,
+		"ST7735 Reset Pin");
+	gpio_request_one(par->dc, GPIOF_OUT_INIT_LOW,
+		"ST7735 Data/Command Pin");
 
 	st7735_reset(par);
 
-	st7735_run_cfg_script(par);
-
-	return 0;
+	return st7735_run_cfg_script(par);
 }
 
 void st7735fb_fillrect(struct fb_info *info, const struct fb_fillrect *rect)
@@ -400,12 +391,6 @@ static int __devinit st7735fb_probe (struct spi_device *spi)
 		return -EINVAL;
 	}
 
-	if (!pdata) {
-		pr_err("%s: platform data required for rst and dc info\n",
-			DRVNAME);
-		return -EINVAL;
-	}
-
 	vmem = vzalloc(vmem_size);
 	if (!vmem)
 		return retval;
@@ -435,17 +420,33 @@ static int __devinit st7735fb_probe (struct spi_device *spi)
 	par = info->par;
 	par->info = info;
 	par->spi = spi;
+
+#if defined(CONFIG_OF)
+	{
+		struct device_node *np = spi->dev.of_node;
+		par->rst = of_get_named_gpio(np, "st7735fb,dc-gpio", 0);
+		par->dc = of_get_named_gpio(np, "st7735fb,rst-gpio", 0);
+#ifdef __BIG_ENDIAN
+		if (of_get_property(np, "little-endian", NULL))
+			info->flags |= FBINFO_FOREIGN_ENDIAN;
+#else
+		if (of_get_property(np, "big-endian", NULL))
+			info->flags |= FBINFO_FOREIGN_ENDIAN;
+#endif
+	}
+#else
+	if (!pdata) {
+		pr_err("%s: platform data required for rst and dc info\n",
+			DRVNAME);
+		return -EINVAL;
+	}
+
 	par->rst = pdata->rst_gpio;
 	par->dc = pdata->dc_gpio;
-
-#ifdef __LITTLE_ENDIAN
-	/* Allocate swapped shadow buffer */
-	vmem = vzalloc(vmem_size);
-	if (!vmem)
-		return retval;
-	par->ssbuf = vmem;
 #endif
 
+	printk("%s registering fdev\n", __func__);
+	
 	retval = register_framebuffer(info);
 	if (retval < 0)
 		goto fbreg_fail;
@@ -493,8 +494,13 @@ static int __devexit st7735fb_remove(struct spi_device *spi)
 	return 0;
 }
 
+static const struct of_device_id st7735fb_of_id[] = {
+	{ .compatible = "st7735fb", },
+	{ /* sentinel */ }
+};
+
 static const struct spi_device_id st7735fb_ids[] = {
-	{ "adafruit_tft18", ST7735_DISPLAY_AF_TFT18 },
+	{ "st7735fb", ST7735_DISPLAY_AF_TFT18 },
 	{ },
 };
 
@@ -504,6 +510,7 @@ static struct spi_driver st7735fb_driver = {
 	.driver = {
 		.name   = "st7735fb",
 		.owner  = THIS_MODULE,
+		.of_match_table = st7735fb_of_id,
 	},
 	.id_table = st7735fb_ids,
 	.probe  = st7735fb_probe,
diff --git a/include/video/st7735fb.h b/include/video/st7735fb.h
index 52f5182..250f036 100644
--- a/include/video/st7735fb.h
+++ b/include/video/st7735fb.h
@@ -34,7 +34,6 @@ enum st7735_cmd {
 struct st7735fb_par {
 	struct spi_device *spi;
 	struct fb_info *info;
-	u16 *ssbuf;
 	int rst;
 	int dc;
 };
-- 
1.7.10.4

